name: "Run Python Agent (uv)"
description: "Runs a Python function with inputs and secrets using uv."
author: "Your Name"

inputs:
  coding_agent:
    description: "Agent/mode to run"
    required: true
  task:
    description: "High-level task"
    required: true
  extra_args:
    description: "Optional JSON string"
    default: "{}"
  python_version:
    description: "Python version (e.g. 3.11). If omitted, use project/default."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install uv (official)
      uses: astral-sh/setup-uv@v6

    # Option A: pick an explicit Python (overrides pyproject/.python-version)
    - name: Set Python via uv (optional)
      if: ${{ inputs.python_version != '' }}
      shell: bash
      run: uv python install ${{ inputs.python_version }}

    # Option B: respect project pin, if your action has one
    - name: Set Python from project pin (fallback)
      if: ${{ inputs.python_version == '' }}
      shell: bash
      run: uv python install

    - name: Install dependencies from action folder
      shell: bash
      run: |
        set -euo pipefail
        cd "${GITHUB_ACTION_PATH}"
        if [[ -f "pyproject.toml" ]]; then
          if [[ -f "uv.lock" ]]; then
            uv sync --locked --all-extras
          else
            uv sync --all-extras
          fi
        elif [[ -f "requirements.txt" ]]; then
          uv pip install -r requirements.txt
        fi

    - name: Run agent
      shell: bash
      env:
        OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
      run: |
        uv run "${GITHUB_ACTION_PATH}/run.py" \
          --coding-agent "${{ inputs.coding_agent }}" \
          --task "${{ inputs.task }}" \
          --extra-args '${{ inputs.extra_args }}'
